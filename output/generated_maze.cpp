#include <iostream>
#include <list>
#include "maze_generator.h"

void MazeGenerator::generateMaze()
{
    // --- Straßenpolygone ---
    // road0
    Mazepolygon road0;
        road0.coordinates.push_back({1.00f, 1.15f});
        road0.coordinates.push_back({0.85f, 1.15f});
        road0.coordinates.push_back({0.85f, 1.00f});
        road0.coordinates.push_back({0.15f, 1.00f});
        road0.coordinates.push_back({0.15f, 2.00f});
        road0.coordinates.push_back({0.15f, 3.00f});
        road0.coordinates.push_back({0.15f, 4.00f});
        road0.coordinates.push_back({0.85f, 4.00f});
        road0.coordinates.push_back({0.85f, 3.85f});
        road0.coordinates.push_back({1.00f, 3.85f});
        road0.coordinates.push_back({1.15f, 3.85f});
        road0.coordinates.push_back({1.15f, 4.00f});
        road0.coordinates.push_back({1.85f, 4.00f});
        road0.coordinates.push_back({1.85f, 3.00f});
        road0.coordinates.push_back({1.85f, 2.00f});
        road0.coordinates.push_back({1.85f, 1.00f});
        road0.coordinates.push_back({1.85f, 0.85f});
        road0.coordinates.push_back({2.00f, 0.85f});
        road0.coordinates.push_back({2.15f, 0.85f});
        road0.coordinates.push_back({2.15f, 1.00f});
        road0.coordinates.push_back({2.15f, 2.00f});
        road0.coordinates.push_back({2.15f, 3.00f});
        road0.coordinates.push_back({2.15f, 4.00f});
        road0.coordinates.push_back({2.15f, 4.85f});
        road0.coordinates.push_back({3.00f, 4.85f});
        road0.coordinates.push_back({4.00f, 4.85f});
        road0.coordinates.push_back({4.15f, 4.85f});
        road0.coordinates.push_back({4.15f, 5.00f});
        road0.coordinates.push_back({4.85f, 5.00f});
        road0.coordinates.push_back({4.85f, 4.85f});
        road0.coordinates.push_back({5.00f, 4.85f});
        road0.coordinates.push_back({5.85f, 4.85f});
        road0.coordinates.push_back({5.85f, 4.00f});
        road0.coordinates.push_back({5.85f, 3.00f});
        road0.coordinates.push_back({5.85f, 2.85f});
        road0.coordinates.push_back({6.00f, 2.85f});
        road0.coordinates.push_back({6.00f, 2.15f});
        road0.coordinates.push_back({5.85f, 2.15f});
        road0.coordinates.push_back({5.85f, 2.00f});
        road0.coordinates.push_back({5.85f, 1.00f});
        road0.coordinates.push_back({5.85f, 0.85f});
        road0.coordinates.push_back({6.00f, 0.85f});
        road0.coordinates.push_back({6.15f, 0.85f});
        road0.coordinates.push_back({6.15f, 1.00f});
        road0.coordinates.push_back({6.85f, 1.00f});
        road0.coordinates.push_back({6.85f, 0.15f});
        road0.coordinates.push_back({6.00f, 0.15f});
        road0.coordinates.push_back({5.00f, 0.15f});
        road0.coordinates.push_back({4.00f, 0.15f});
        road0.coordinates.push_back({3.00f, 0.15f});
        road0.coordinates.push_back({2.00f, 0.15f});
        road0.coordinates.push_back({1.15f, 0.15f});
        road0.coordinates.push_back({1.15f, 1.00f});
        road0.coordinates.push_back({1.15f, 1.15f});
    polygons.push_back(road0);

    // --- Löcher (Innenflächen) ---
    // hole0
    Mazepolygon hole0;
        hole0.coordinates.push_back({2.85f, 4.15f});
        hole0.coordinates.push_back({2.85f, 4.00f});
        hole0.coordinates.push_back({2.85f, 3.00f});
        hole0.coordinates.push_back({2.85f, 2.85f});
        hole0.coordinates.push_back({3.00f, 2.85f});
        hole0.coordinates.push_back({3.15f, 2.85f});
        hole0.coordinates.push_back({3.15f, 3.00f});
        hole0.coordinates.push_back({3.15f, 4.00f});
        hole0.coordinates.push_back({3.15f, 4.15f});
        hole0.coordinates.push_back({3.00f, 4.15f});
    polygons.push_back(hole0);

    // hole1
    Mazepolygon hole1;
        hole1.coordinates.push_back({3.85f, 2.00f});
        hole1.coordinates.push_back({3.85f, 1.00f});
        hole1.coordinates.push_back({3.85f, 0.85f});
        hole1.coordinates.push_back({4.00f, 0.85f});
        hole1.coordinates.push_back({4.15f, 0.85f});
        hole1.coordinates.push_back({4.15f, 1.00f});
        hole1.coordinates.push_back({4.15f, 2.00f});
        hole1.coordinates.push_back({4.85f, 2.00f});
        hole1.coordinates.push_back({4.85f, 1.00f});
        hole1.coordinates.push_back({4.85f, 0.85f});
        hole1.coordinates.push_back({5.00f, 0.85f});
        hole1.coordinates.push_back({5.15f, 0.85f});
        hole1.coordinates.push_back({5.15f, 1.00f});
        hole1.coordinates.push_back({5.15f, 2.00f});
        hole1.coordinates.push_back({5.15f, 3.00f});
        hole1.coordinates.push_back({5.15f, 4.00f});
        hole1.coordinates.push_back({5.15f, 4.15f});
        hole1.coordinates.push_back({5.00f, 4.15f});
        hole1.coordinates.push_back({4.85f, 4.15f});
        hole1.coordinates.push_back({4.85f, 4.00f});
        hole1.coordinates.push_back({4.85f, 3.15f});
        hole1.coordinates.push_back({4.00f, 3.15f});
        hole1.coordinates.push_back({3.85f, 3.15f});
        hole1.coordinates.push_back({3.85f, 3.00f});
    polygons.push_back(hole1);

    // hole2
    Mazepolygon hole2;
        hole2.coordinates.push_back({3.15f, 2.15f});
        hole2.coordinates.push_back({3.00f, 2.15f});
        hole2.coordinates.push_back({2.85f, 2.15f});
        hole2.coordinates.push_back({2.85f, 2.00f});
        hole2.coordinates.push_back({2.85f, 1.00f});
        hole2.coordinates.push_back({2.85f, 0.85f});
        hole2.coordinates.push_back({3.00f, 0.85f});
        hole2.coordinates.push_back({3.15f, 0.85f});
        hole2.coordinates.push_back({3.15f, 1.00f});
        hole2.coordinates.push_back({3.15f, 2.00f});
    polygons.push_back(hole2);

    // hole3
    Mazepolygon hole3;
        hole3.coordinates.push_back({0.85f, 1.85f});
        hole3.coordinates.push_back({1.00f, 1.85f});
        hole3.coordinates.push_back({1.15f, 1.85f});
        hole3.coordinates.push_back({1.15f, 2.00f});
        hole3.coordinates.push_back({1.15f, 3.00f});
        hole3.coordinates.push_back({1.15f, 3.15f});
        hole3.coordinates.push_back({1.00f, 3.15f});
        hole3.coordinates.push_back({0.85f, 3.15f});
        hole3.coordinates.push_back({0.85f, 3.00f});
        hole3.coordinates.push_back({0.85f, 2.00f});
    polygons.push_back(hole3);

    // hole4
    Mazepolygon hole4;
        hole4.coordinates.push_back({3.85f, 4.00f});
        hole4.coordinates.push_back({3.85f, 3.85f});
        hole4.coordinates.push_back({4.00f, 3.85f});
        hole4.coordinates.push_back({4.15f, 3.85f});
        hole4.coordinates.push_back({4.15f, 4.00f});
        hole4.coordinates.push_back({4.15f, 4.15f});
        hole4.coordinates.push_back({4.00f, 4.15f});
        hole4.coordinates.push_back({3.85f, 4.15f});
    polygons.push_back(hole4);

    std::cout << "Maze generated!" << std::endl;

    // --- Solution Graph ---
    SolutionGraphNode node1;
    node1.coordinate = {2.50f, 4.50f};
    SolutionGraphNode node2;
    node2.coordinate = {3.50f, 4.50f};
    SolutionGraphNode node3;
    node3.coordinate = {4.50f, 4.50f};
    SolutionGraphNode node4;
    node4.coordinate = {5.50f, 4.50f};
    SolutionGraphNode node5;
    node5.coordinate = {0.50f, 3.50f};
    SolutionGraphNode node6;
    node6.coordinate = {1.50f, 3.50f};
    SolutionGraphNode node7;
    node7.coordinate = {2.50f, 3.50f};
    SolutionGraphNode node8;
    node8.coordinate = {3.50f, 3.50f};
    SolutionGraphNode node9;
    node9.coordinate = {4.50f, 3.50f};
    SolutionGraphNode node10;
    node10.coordinate = {5.50f, 3.50f};
    SolutionGraphNode node11;
    node11.coordinate = {0.50f, 2.50f};
    SolutionGraphNode node12;
    node12.coordinate = {1.50f, 2.50f};
    SolutionGraphNode node13;
    node13.coordinate = {2.50f, 2.50f};
    SolutionGraphNode node14;
    node14.coordinate = {3.50f, 2.50f};
    SolutionGraphNode node15;
    node15.coordinate = {5.50f, 2.50f};
    SolutionGraphNode node16;
    node16.coordinate = {0.50f, 1.50f};
    SolutionGraphNode node17;
    node17.coordinate = {1.50f, 1.50f};
    SolutionGraphNode node18;
    node18.coordinate = {2.50f, 1.50f};
    SolutionGraphNode node19;
    node19.coordinate = {3.50f, 1.50f};
    SolutionGraphNode node20;
    node20.coordinate = {4.50f, 1.50f};
    SolutionGraphNode node21;
    node21.coordinate = {5.50f, 1.50f};
    SolutionGraphNode node22;
    node22.coordinate = {1.50f, 0.50f};
    SolutionGraphNode node23;
    node23.coordinate = {2.50f, 0.50f};
    SolutionGraphNode node24;
    node24.coordinate = {3.50f, 0.50f};
    SolutionGraphNode node25;
    node25.coordinate = {4.50f, 0.50f};
    SolutionGraphNode node26;
    node26.coordinate = {5.50f, 0.50f};
    SolutionGraphNode node27;
    node27.coordinate = {6.50f, 0.50f};
    node1.neighbors.push_back(&node7);
    node1.neighbors.push_back(&node2);
    node2.neighbors.push_back(&node8);
    node2.neighbors.push_back(&node1);
    node2.neighbors.push_back(&node3);
    node3.neighbors.push_back(&node9);
    node3.neighbors.push_back(&node2);
    node3.neighbors.push_back(&node4);
    node4.neighbors.push_back(&node10);
    node4.neighbors.push_back(&node3);
    node5.neighbors.push_back(&node11);
    node5.neighbors.push_back(&node6);
    node6.neighbors.push_back(&node12);
    node6.neighbors.push_back(&node5);
    node7.neighbors.push_back(&node1);
    node7.neighbors.push_back(&node13);
    node8.neighbors.push_back(&node2);
    node8.neighbors.push_back(&node14);
    node8.neighbors.push_back(&node9);
    node9.neighbors.push_back(&node3);
    node9.neighbors.push_back(&node8);
    node10.neighbors.push_back(&node4);
    node10.neighbors.push_back(&node15);
    node11.neighbors.push_back(&node5);
    node11.neighbors.push_back(&node16);
    node12.neighbors.push_back(&node6);
    node12.neighbors.push_back(&node17);
    node13.neighbors.push_back(&node7);
    node13.neighbors.push_back(&node18);
    node13.neighbors.push_back(&node14);
    node14.neighbors.push_back(&node8);
    node14.neighbors.push_back(&node19);
    node14.neighbors.push_back(&node13);
    node15.neighbors.push_back(&node10);
    node15.neighbors.push_back(&node21);
    node16.neighbors.push_back(&node11);
    node16.neighbors.push_back(&node17);
    node17.neighbors.push_back(&node12);
    node17.neighbors.push_back(&node22);
    node17.neighbors.push_back(&node16);
    node18.neighbors.push_back(&node13);
    node18.neighbors.push_back(&node23);
    node19.neighbors.push_back(&node14);
    node19.neighbors.push_back(&node24);
    node20.neighbors.push_back(&node25);
    node21.neighbors.push_back(&node15);
    node21.neighbors.push_back(&node26);
    node22.neighbors.push_back(&node17);
    node22.neighbors.push_back(&node23);
    node23.neighbors.push_back(&node18);
    node23.neighbors.push_back(&node22);
    node23.neighbors.push_back(&node24);
    node24.neighbors.push_back(&node19);
    node24.neighbors.push_back(&node23);
    node24.neighbors.push_back(&node25);
    node25.neighbors.push_back(&node20);
    node25.neighbors.push_back(&node24);
    node25.neighbors.push_back(&node26);
    node26.neighbors.push_back(&node21);
    node26.neighbors.push_back(&node25);
    node26.neighbors.push_back(&node27);
    node27.neighbors.push_back(&node26);
    solutionGraph.push_back(node1);
    solutionGraph.push_back(node2);
    solutionGraph.push_back(node3);
    solutionGraph.push_back(node4);
    solutionGraph.push_back(node5);
    solutionGraph.push_back(node6);
    solutionGraph.push_back(node7);
    solutionGraph.push_back(node8);
    solutionGraph.push_back(node9);
    solutionGraph.push_back(node10);
    solutionGraph.push_back(node11);
    solutionGraph.push_back(node12);
    solutionGraph.push_back(node13);
    solutionGraph.push_back(node14);
    solutionGraph.push_back(node15);
    solutionGraph.push_back(node16);
    solutionGraph.push_back(node17);
    solutionGraph.push_back(node18);
    solutionGraph.push_back(node19);
    solutionGraph.push_back(node20);
    solutionGraph.push_back(node21);
    solutionGraph.push_back(node22);
    solutionGraph.push_back(node23);
    solutionGraph.push_back(node24);
    solutionGraph.push_back(node25);
    solutionGraph.push_back(node26);
    solutionGraph.push_back(node27);
    std::cout << "Solutiongraph generated!" << std::endl;
}
